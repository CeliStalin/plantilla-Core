version: '3.8'

services:
  # Servicio de PRODUCCIÃ“N
  react-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NODE_OPTIONS=--max-old-space-size=2048
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    profiles:
      - production

  # Servicio de DESARROLLO
  react-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    ports:
      - "3001:3000"
    volumes:
      - .:/app:cached
      - /app/node_modules
      - node_modules_cache:/app/node_modules/.cache
      - typescript_cache:/app/.tsbuildinfo
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - FAST_REFRESH=true
      - NODE_OPTIONS=--max-old-space-size=4096
      - WATCHPACK_POLLING=true
      - TSC_WATCHFILE=UseFsEventsWithFallbackDynamicPolling
    stdin_open: true
    tty: true
    security_opt:
      - no-new-privileges:true
    profiles:
      - development

  # Servicio de TESTING
  react-test:
    build:
      context: .
      dockerfile: Dockerfile.test
      target: test
    environment:
      - NODE_ENV=test
      - CI=true
      - NODE_OPTIONS=--max-old-space-size=4096
    volumes:
      - .:/app:cached
      - /app/node_modules
      - test_coverage:/app/coverage
    security_opt:
      - no-new-privileges:true
    profiles:
      - test

volumes:
  node_modules_cache:
    driver: local
  typescript_cache:
    driver: local
  test_coverage:
    driver: local
