# Dockerfile optimizado para desarrollo con React TypeScript

FROM node:20-alpine AS development

# Instalar dependencias del sistema para desarrollo
RUN apk add --no-cache \
    git \
    python3 \
    make \
    g++ \
    ca-certificates \
    && ln -sf python3 /usr/bin/python

WORKDIR /app

# Configurar npm para desarrollo optimizado
RUN npm config set fund false && \
    npm config set audit-level moderate && \
    npm config set fetch-retry-maxtimeout 60000 && \
    npm config set fetch-retry-mintimeout 10000

# Crear usuario de desarrollo
RUN addgroup -g 1001 -S nodejs && \
    adduser -S devuser -u 1001 -G nodejs

# Copiar archivos de paquetes
COPY --chown=devuser:nodejs package*.json ./
COPY --chown=devuser:nodejs yarn.lock* ./

# Instalar TODAS las dependencias con optimizaciones
RUN npm ci --include=dev --no-optional --silent && \
    npm cache clean --force

# Cambiar a usuario de desarrollo
USER devuser

# Copiar c√≥digo fuente con permisos correctos
COPY --chown=devuser:nodejs . .

# Exponer puerto para desarrollo
EXPOSE 3000

# Variables de ambiente para desarrollo con React TypeScript
ENV NODE_ENV=development
ENV CHOKIDAR_USEPOLLING=true
ENV FAST_REFRESH=true
ENV NODE_OPTIONS="--max-old-space-size=4096"
ENV WATCHPACK_POLLING=true
ENV TSC_WATCHFILE=UseFsEventsWithFallbackDynamicPolling

# Comando para desarrollo con hot-reload
CMD ["npm", "run", "dev"]
